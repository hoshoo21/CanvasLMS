

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace LMS.Models
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class LMSEntities : DbContext
{
    public LMSEntities()
        : base("name=LMSEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<AutoResponderEmail> AutoResponderEmails { get; set; }

    public virtual DbSet<AutoRespondingRule> AutoRespondingRules { get; set; }

    public virtual DbSet<CourseProvider> CourseProviders { get; set; }

    public virtual DbSet<Cours> Courses { get; set; }

    public virtual DbSet<CourseSchedule> CourseSchedules { get; set; }

    public virtual DbSet<CourseUniversity> CourseUniversities { get; set; }

    public virtual DbSet<CourseUniversityLM> CourseUniversityLMS { get; set; }

    public virtual DbSet<DiscussionDetail> DiscussionDetails { get; set; }

    public virtual DbSet<DisucssionMaster> DisucssionMasters { get; set; }

    public virtual DbSet<EmailRule> EmailRules { get; set; }

    public virtual DbSet<FAQ> FAQs { get; set; }

    public virtual DbSet<KnowFaq> KnowFaqs { get; set; }

    public virtual DbSet<KnownDiscussion> KnownDiscussions { get; set; }

    public virtual DbSet<LMSProvider> LMSProviders { get; set; }

    public virtual DbSet<PendingReply> PendingReplies { get; set; }

    public virtual DbSet<Question> Questions { get; set; }

    public virtual DbSet<StudentRegistration> StudentRegistrations { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<SubDiscussionDetail> SubDiscussionDetails { get; set; }

    public virtual DbSet<SubDiscussionForumReply> SubDiscussionForumReplies { get; set; }

    public virtual DbSet<SubDiscussionReply> SubDiscussionReplies { get; set; }

    public virtual DbSet<SubKnowDiscussion> SubKnowDiscussions { get; set; }

    public virtual DbSet<University> Universities { get; set; }

    public virtual DbSet<CanvasRespondRuleQuestion> CanvasRespondRuleQuestions { get; set; }

    public virtual DbSet<FAQEmail> FAQEmails { get; set; }

    public virtual DbSet<FAQEmailsDownload> FAQEmailsDownloads { get; set; }

    public virtual DbSet<SmtpPopSetting> SmtpPopSettings { get; set; }

    public virtual DbSet<AnsweredFAQ> AnsweredFAQs { get; set; }

    public virtual DbSet<UnAnsweredFAQ> UnAnsweredFAQs { get; set; }

    public virtual DbSet<CanvasRespondRule> CanvasRespondRules { get; set; }


    public virtual int AddCourse(string courseName, string courseDescription, Nullable<System.Guid> createdby, Nullable<System.Guid> updatedby)
    {

        var courseNameParameter = courseName != null ?
            new ObjectParameter("CourseName", courseName) :
            new ObjectParameter("CourseName", typeof(string));


        var courseDescriptionParameter = courseDescription != null ?
            new ObjectParameter("CourseDescription", courseDescription) :
            new ObjectParameter("CourseDescription", typeof(string));


        var createdbyParameter = createdby.HasValue ?
            new ObjectParameter("Createdby", createdby) :
            new ObjectParameter("Createdby", typeof(System.Guid));


        var updatedbyParameter = updatedby.HasValue ?
            new ObjectParameter("Updatedby", updatedby) :
            new ObjectParameter("Updatedby", typeof(System.Guid));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCourse", courseNameParameter, courseDescriptionParameter, createdbyParameter, updatedbyParameter);
    }


    public virtual ObjectResult<GetCourse_Result> GetCourse()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourse_Result>("GetCourse");
    }


    public virtual ObjectResult<GetDiscussion_Result> GetDiscussion(Nullable<bool> isAll)
    {

        var isAllParameter = isAll.HasValue ?
            new ObjectParameter("isAll", isAll) :
            new ObjectParameter("isAll", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDiscussion_Result>("GetDiscussion", isAllParameter);
    }


    public virtual ObjectResult<GetFaq_Result> GetFaq(Nullable<bool> isAll)
    {

        var isAllParameter = isAll.HasValue ?
            new ObjectParameter("isAll", isAll) :
            new ObjectParameter("isAll", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFaq_Result>("GetFaq", isAllParameter);
    }


    public virtual ObjectResult<GetStudentCourse_Result> GetStudentCourse(string universityId)
    {

        var universityIdParameter = universityId != null ?
            new ObjectParameter("UniversityId", universityId) :
            new ObjectParameter("UniversityId", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentCourse_Result>("GetStudentCourse", universityIdParameter);
    }


    public virtual ObjectResult<GetStudentUniversity_Result> GetStudentUniversity(Nullable<System.Guid> courseId)
    {

        var courseIdParameter = courseId.HasValue ?
            new ObjectParameter("CourseId", courseId) :
            new ObjectParameter("CourseId", typeof(System.Guid));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentUniversity_Result>("GetStudentUniversity", courseIdParameter);
    }

}

}

